<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!--#region Style TextBlock (vertical)-->
    <Style x:Key="verticalText" TargetType="TextBlock">
        <Setter Property="FontSize" Value="11"/>
        <Setter Property="Padding" Value="0 2"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <RotateTransform Angle="-90"/>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region Style TextBox (vertical)-->
    <Style x:Key="verticalTextBox" TargetType="TextBox">
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <RotateTransform Angle="-90"/>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region Style TextBox-->
    <Style TargetType="{x:Type TextBox}">
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource SecundaryTextColor}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
            </Trigger>
        </Style.Triggers>
        <Setter Property="SnapsToDevicePixels"  Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}" />
        <Setter Property="CaretBrush" Value="{DynamicResource PrimaryTextColor}" />
        <Setter Property="KeyboardNavigation.TabNavigation"  Value="None" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="MinWidth" Value="20" />
        <Setter Property="MinHeight" Value="10" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Border Name="Border" CornerRadius="2" Padding="2" BorderThickness="1" BorderBrush="{DynamicResource PrimaryBackgroundColor}">
                        <Border.Background>
                            <SolidColorBrush Color="{DynamicResource cQuaternaryBackgroundColor}" />
                        </Border.Background>
                        <!--<Border.BorderBrush>
                          <SolidColorBrush Color="{DynamicResource cPrimaryBackgroundColor}" />
                      </Border.BorderBrush>-->
                        <!--<VisualStateManager.VisualStateGroups>
                          <VisualStateGroup x:Name="CommonStates">
                              <VisualState x:Name="Normal" >                                   
                              </VisualState>
                              <VisualState x:Name="Disabled">
                                  <Storyboard>
                                      <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"  Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                          <EasingColorKeyFrame KeyTime="0" Value="{DynamicResource cSecundaryBackgroundColor}" />
                                      </ColorAnimationUsingKeyFrames>
                                  </Storyboard>
                              </VisualState>
                              <VisualState x:Name="ReadOnly">
                              </VisualState>
                              <VisualState x:Name="MouseOver" />
                          </VisualStateGroup>
                      </VisualStateManager.VisualStateGroups>-->
                        <ScrollViewer Margin="0" x:Name="PART_ContentHost" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource SecundaryBackgroundColor}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="True">
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>

        </Setter>

    </Style>
    <!--#endregion-->
</ResourceDictionary>